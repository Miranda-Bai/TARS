FROM kalilinux/kali-rolling
ENV DEBIAN_FRONTEND=noninteractive

# install dependencies
RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y curl dnsutils wget
RUN apt-get install -y nmap sqlmap autopsy john
RUN apt-get install -y vim python3-pip git python-is-python3

# install zaproxy stuff
RUN apt-get install -y zaproxy docker.io
#RUN pip install zaproxy

RUN apt-get install -y zaproxy docker.io python3-venv

# Create and activate a virtual environment
RUN python3 -m venv /opt/zap-venv && \
    /opt/zap-venv/bin/pip install zaproxy

# install Google Chrome
WORKDIR /home/
# Install dependencies
RUN apt-get update && apt-get install -y wget gnupg2 software-properties-common

# Manually download and add Google Chrome's key (modern alternative to apt-key)
RUN mkdir -p /etc/apt/keyrings && \
    wget -q -O - https://dl.google.com/linux/linux_signing_key.pub > /etc/apt/keyrings/google-chrome.key && \
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.key] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list

# Install Google Chrome
RUN apt-get update && apt-get install -y google-chrome-stable
WORKDIR /root/

# install RustScan
RUN wget https://github.com/RustScan/RustScan/releases/download/2.2.2/rustscan_2.2.2_amd64.deb
RUN dpkg -i rustscan_2.2.2_amd64.deb
RUN rm rustscan_2.2.2_amd64.deb
RUN apt-get install -y iputils-ping

# segmented run layers so the compiler does not struggle
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# 2025 Jun, install Nettacker
# RUN mkdir ~/nettacker
# RUN git clone https://github.com/OWASP/Nettacker.git ~/nettacker
# RUN python3 -m venv ~/nettacker
# RUN source ~/nettacker/bin/activate 
# RUN pip3 install ~/nettacker 
# RUN chmod +x ~/nettacker/nettacker.py

# Install Nettacker properly with virtualenv
# Python version incompatible
# RUN mkdir ~/nettacker
# RUN git clone https://github.com/OWASP/Nettacker.git ~/nettacker && \
#     python3 -m venv ~/nettacker/venv && \
#     ~/nettacker/venv/bin/pip install --upgrade pip && \
#     ~/nettacker/venv/bin/pip install -e ~/nettacker && \
#     chmod +x ~/nettacker/nettacker.py 

# install project's depends
# COPY . /root/
# RUN pip install --default-timeout=1000 --no-cache-dir --use-deprecated=legacy-resolver -r /root/requirements.txt

# WORKDIR /root/tars/

# install project's depends
COPY . /root/
# Create and use a virtual environment for your project
RUN python3 -m venv /opt/project-venv && \
    /opt/project-venv/bin/pip install --upgrade pip && \
    /opt/project-venv/bin/pip install --default-timeout=1000 --no-cache-dir -r /root/requirements.txt && \
    echo 'source /opt/project-venv/bin/activate' >> /root/.bashrc

WORKDIR /root/tars/

EXPOSE 8501
CMD ["bash"]